// Framework //

$gutterWidth: 8px
$grey: rgba(0, 0, 0, .20)
$sansSerif: Helvetica, Arial, sans-serif

body
  font-family: $sansSerif

.container
  border: 1px solid #000
  width: $totalWidth
  +clear

// example of using the semantic grid in a class-based way, like any other grid system. 

[class*="block_"]
  min-height: 300px
  background: $grey
  float: left

[class*="block_"] > [class*="block_"]
  background: $grey

  &:first-child
    margin-#{$gutterDir}: 0

@for $i from 1 through $columns 
  .block_#{$i} 
    +columns($i)


.golden
  min-height: 300px
  background: $grey
  float: left
  &:nth-child(odd)
    +golden-ratio(columns(6), "lesser")
  &:nth-child(even)
    +golden-ratio(columns(6), "greater")

.golden-vert
  width: 100%
  background: $grey
  &:first-child
    +golden-ratio(300px, "lesser", $gutterDir: bottom, $dir: height)
  &:last-child
    +golden-ratio(300px, "greater", $gutter: false, $dir: height)

.golden-inner
  height: 100%
  background: $grey
  float: left
  &:first-child
    width: golden-ratio(golden-ratio(columns(6), "lesser"), "lesser") - $gutterWidth
  &:last-child
    width: golden-ratio(golden-ratio(columns(6), "lesser"), "greater") - $gutterWidth
    margin-left: $gutterWidth

  .golden-vert
    width: 100%
    background: $grey
    &:first-child
      height: golden-ratio(golden-ratio(300px, "greater"), "lesser")
    &:last-child
      height: golden-ratio(golden-ratio(300px, "greater"), "greater") - $gutterWidth




